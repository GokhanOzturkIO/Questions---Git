1-Git Nedir
-Git, dağıtık bir sürüm kontrol sistemidir ve dosyalar üzerinde versiyonlama yapmak için kullanılır. Ayrıca, beraber çalışma süreçlerindeki zorlukları ortadan kaldırarak işbirliğini kolaylaştırır.
2-git pull ile git fetch komutlarının farkı nedir  
-Her iki komutta uzak depodan güncellemeleri alır git pull yerel çalışmasını güncellerken git fetch yerel çalışma kopyasını güncellemez
3-Eğer takım arkadaşımız kodlarımı gönderdim, benim geliştirmemin üzerine devam et derse ve gönderdiği kodları git pull ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir
-Takım arkadaşımız geliştirmelerini git push komutu ile uzak sunucuya göndermemiş olabilir veya farklı bir branch'e push olabilir
4-git fetch origin komutundaki origin neye karşılık gelmektedir
-uzak sunucu
5-"HEAD" kelimesi neyi temsil etmektedir?
-üzerinde çalıştığımız branchteki en sondaki commit'i ifade eder
6-Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?
-git commitlerimizi push etmeden önce alınan ara bölgedir
7-Untracked file" ne demektir?
-Git'e tarafından takip edilmeyen bir dosyayı ifade eder
8-".git" klasörünü silersek ne olur?
-Git deposundaki , commitler,branchler kısaca tüm geçmiş kaybolur
9-Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?
- Her 'git init' komutu kullanıldığında otomatik olarak 'ReadMe.md' dosyasının oluşturulması için, önce ~/.git-templates adında bir klasör oluşturulur, sonra bu klasöre "ReadMe.md" dosyası eklenir 'git init --template ~/.git-templates' komutu kullanılır
10-- Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?
-Projede ayrı bir alanda çalışmamızı sağlar.Bir Projede birden çok kişinin ayrı şekilde çalışmasını sağlar
11-Sıfırdan bir "branch" nasıl oluşturabiliriz?
- git branch [yeni_branch_adi] şekilde oluşturabiliriz
12-Var olan bir "branch"e nasıl geçebiliriz?
git checkout [branch_adi] veya git switch [branch_adi] şeklinde geçiş yapabiliriz