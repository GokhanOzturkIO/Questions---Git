1.Git Nedir?
- Git bir versiyon kontrol sistemidir. Linus Turvolds tarafindan Linux çekirdeginin gelisititrlmesi icin 2005 yilinda olusturulmustur. Git sayesinde birden fazla gelistirici es zamanli projelerde calisabilir ve projelerin farklı versiyonlarının kopyalarını alarak daha sonra kullanmak uzere bu kopyalara donebilir.

2."git pull" ile "git fetch" komutlarının farkı nedir?
- git fetch -> Uzak sunucudaki degisikliklerden localdeki bilgisayarin haberdar olmasini saglar. Local'deki kod ile uzak sunucudaki kolu karsilastirir.
  git pull -> Hangi branch'te calisiliyorsa, o branchte yapilan degisiklikleri locak bilgisayara cekmek.

3.Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?
- 1. git commit ile gonderilmis olabilri fakat git push yapilmamis olabilrii
  2. kodda ayni dosyanin ayni satirinda iki farkli degisiklik yapilmis olabilri. git buna karar veremez hangisinin secilecegini sorar.

4."git fetch origin" komutundaki "origin" neye karşılık gelmektedir?
- origin bir uzak sunucudur ve bu komutla uzaktaki sunucuda yapilan son degisikligi alabiliriz.

5."HEAD" kelimesi neyi temsil etmektedir?
- Commit islemini isaret eden yapiya HEAD denir. Bagli oldugumuz branch'e de isaret edebilir ama HEAD genelde atilan son commiti isaret eder.

6."Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?
- Local area ve uzak sunucu arasindaki bolgedir. Dosyalari git add komutu ile bu bolgeye gonderip git ile takip edilmesini saglariz. Yapilan degisiklikleri staging areaya eklemek uzak sunucudaki kodu degistirmez.

7."Untracked file" ne demektir?
- git init ile git'i baslattigimiz klasorde git add ile yapilan degisiklikleri staging areaya eklemediysek , dosya git tarafindan takip edilemez. Bu nedenle untracked file olarak adlandirilir. 

8.".git" klasörünü silersek ne olur?
- git'in o klasorde calisabilmesi icin .git adli bir gizli dosyaya sahip olmasi gerekir. .git klasoru silinirse git ile yaptigimiz butun calismalari kaybetmis oluruz. Tekrar git'i initialize etmek gerekir.

9.Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?
- ReadMe.md dosyası olusturacak bir template ayarlamaliyiz.

10.Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?
- Projeyi farklı kollara ayırıp herkesin projein belli bir kısmında çalışmasını saglar. Bu sayede conflict onlenir.

11.Sıfırdan bir "branch" nasıl oluşturabiliriz?
- git branch 'feature/branchadi' ile yeni bir branch olusturabiliriz.

12.Var olan bir "branch"e nasıl geçebiliriz?
- git checkout 'feature/branchadi'

"git clone" komutunu kullanırken belirli bir spesifik branch'i sadece çekmek istiyorsak nasıl yapabiliriz?
"Merge conflict" ne demektir?
"git log" komutu ile hangi bilgileri görebiliriz?
"git diff" ile kaç farklı iki durumun arasındaki değişiklikleri görebiliriz?
Git reset ile neyi geri alıyoruz?
"git commit" ile "git push" arasındaki fark nedir?
Atomic commit ne demektir?
Repository ne demektir?
"git tag" nedir? "git branch"’ten farkı nedir?
Git'i görsel olarak kullanabilmek için hangi üçüncü taraf araçları ve uygulamaları kullanabiliriz?
"GitHub" ile "git" arasındaki fark nedir? GitHub benzeri diğer siteler nelerdir? GitHub veya diğer sitelerdeki kullanıcı adlarını yazar mısınız?
main ya da master branch'inin diğer branchlerden farkı nedir?

