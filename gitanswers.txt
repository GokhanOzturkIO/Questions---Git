1- Git Nedir ? :

Git, dağıtık bir versiyon kontrol sistemidir. Yazılım geliştirme süreçlerinde, bir ekip veya bireylerin kodlarını takip etmelerine, yönetmelerine ve işbirliği yapmalarına olanak tanır. Git, projenin herhangi bir noktasındaki dosyaların ve kod değişikliklerinin takibini sağlar.Açık kaynaklıdır.

2- "git pull" ile "git fetch" komutlarının farkı nedir? :

git fetch komutu, uzak depodaki değişiklikleri alır ve yerel depoyu güncellemeden önce onları yerelde saklar. git pull ise, aynı işlemi yapar, ancak ayrıca yerel depoyu güncellemek için de bir birleştirme işlemi gerçekleştirir.

3-Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir? :

Takım arkadaşımız commitleyip push etmemiş olabilir ya da farklı branche push edilmiş olabilir.

4-"git fetch origin" komutundaki "origin" neye karşılık gelmektedir? :

"origin", Git'te genellikle varsayılan olarak tanımlanan bir uzak depo adıdır. Bir Git deposunu klonladığınızda, genellikle bu depoya "origin" adı verilir. Bu, orijinal (origin) depoyu temsil eder ve genellikle projenin ana depo adresini ifade eder.

5-"HEAD" kelimesi neyi temsil etmektedir? :

"HEAD" en son yapılan commit'i işaret eder.Farklı branch e geçtiğimizde HEAD de güncellemiş olacaktır.

6-"Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir? : 

"Staging Area" veya "Index", Git'in temel kavramlarından biridir ve değişikliklerin kaydedilmeden önce geçici olarak saklandığı bir ara bölgedir. Bu bölge, dosyaların son durumunu bir sonraki commit için hazırlamamıza olanak tanır.

7- "Untracked file" ne demektir?

Untracked file" terimi, Git'in çalışma dizininde bulunan ve henüz Git'in takibine alınmamış dosyaları ifade eder. Yani, bu dosyalar, Git'in dikkate almadığı ve değişikliklerini izlemediği dosyalardır.

8-".git" klasörünü silersek ne olur? :

Eğer .git klasörünü silerseniz, Git deposunun kontrolü kaybolur ve projenin Git tarafından yönetilen tüm özellikleri kullanılamaz hale gelir.

9- Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız? :

İlk başta şablon dizini oluşturulur.
mkdir -p ~/.git-templates/init

sonrasında ReadMe.md dosyası oluşturulup.
echo "# My Project" > ~/.git-templates/init/ReadMe.md

 Git konfigürasyonunu güncelleriz.
git config --global init.templatedir '~/.git-templates'

10- Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?

branch yapısı dallanmayı yani projede ayrı bir alanda çalışmamızı sağlar.Bu şekilde aynı projede birden çok kişi ayrı şekilde çalışabilir.