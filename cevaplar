- Git Nedir?

Git, bir projenin geçmiş ve güncel sürümlerini takip etmenizi ve değişiklikleri kolayca yönetmenizi sağlayan bir dağıtık versiyon kontrol sistemidir.

- "git pull" ile "git fetch" komutlarının farkı nedir?

"git fetch" uzaktaki değişiklikleri getirip gösterirken, "git pull" hem getirir hem de yerel branch'e otomatik merge eder.

- Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?

  - git url'si yanlış olabilir
  - uzak sunucuya erişimimiz olmayabilir
  - Takım arkadaşımız kodları doğru göndermemiş olabilir
  - Yanlış branch'i pull etmiş olabilir

- "git fetch origin" komutundaki "origin" neye karşılık gelmektedir?

    Git'te "origin" uzaktaki ana depoyu (remote repository) temsil eder.

- "HEAD" kelimesi neyi temsil etmektedir?
  Git ağacında üzerinde çalışılan uç diyebiliriz.Şu anki çalışma konumunuzu temsil eder. Farklı branch ve commitlere geçişimizi sağlar.

  - "Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?
  Git Staging Area , commit'lemeden önce hangi dosya değişikliklerinin kaydedileceğini seçtiğiniz alandır.

- "Untracked file" ne demektir?

"Untracked file", Git deposunda hiç kaydedilmemiş dosya anlamına gelir.

-".git" klasörünü silersek ne olur?

.git klasörü geçmişin ve değişikliklerin kayıtlarının tutulduğu yerdir.Silinirse tüm her şey yok olur.

- Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?

~/.gitconfig dosyasınının içine aşağıdaki satırları eklenir:
[init]
	defaultBranch = main
	bare = false
	template = ~/.git-templates/README.md
~/.git-templates klasörünü oluşturun.
    README.md dosyanızı bu klasöre kopyalayın.

- Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?

Branch , projenin farklı versiyonlarının geliştirilmesi ya da birden fazla kişinin aynı projede beraber çalışmasını sağlar.Aynı zamanda bir timeline oluşturur ve geçmişi takip etmemizi sağlar.

- Sıfırdan bir "branch" nasıl oluşturabiliriz?

git branch [branchname] veya git checkout -b [branchname]

- Var olan bir "branch"e nasıl geçebiliriz?

git checkout [branchname]