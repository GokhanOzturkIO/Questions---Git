1- Git nedir?

Git bir versiiyon kontrol sistemidir. Dosyaların zaman içinde uğradığı değişiklikleri işaretlemek, raporlamak, etiketlemek için kullanılır. Bu hem tek başına çalışırken hem de grupla çalışırken düzenli ve verimli bir çalışma ortamı oluşturmaya yardımcı olur.
#####
 
2- "git pull" ile "git fetch" komutlarının farkı nedir?

Uzak bir repoyla çalışırken git fetch komutunu kullanırsak uzak repodaki son değişikliklerden "haberdar oluruz" ancak yerel repomuza çekmeyiz. Eğer git pull komutunu kullanırsak, bu kez uzak repodaki değişiklikleri kendi yerel repomuza çekebilir ve böylece karşıyla senkronizasyon sağlayabiliriz.
#####



3- Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?

Eğer teknik bir sorun(bağlantı kopması vb) yoksa arkadaşımız commitlediği değişikleri push ile uzak repoya göndermemiş olabilir. Push ettiği halde sorun devam ediyorsa farklı bir branche push etmiş olabilri.
#####


4- "git fetch origin" komutundaki "origin" neye karşılık gelmektedir?

Uzak repoya denk gelir. "git pull" dediğimizde o "origin"den çekeriz
#####

5- - "HEAD" kelimesi neyi temsil etmektedir?

Üzerinde çalıştığımız son commiti temsil eder. Farklı bi dala veya commite geçersek HEAD de güncellenir.
#####

5- - "Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?

"git add" komutunu kullandıktan sonra henüz commitlemediysek dosyalarımız bir "ara bölge"de bulunur. Üstünde çalıştığınız dosya ile commit deposu arasında bir bekleme bölgesi denilebilir. Böylece tüm değişiklikleri bir seferde değil de grup grup gönderebiliriz.
#####

6- - "Untracked file" ne demektir?

Git sistemiyle takip edilmeyen, değişiklikleri izlenmeyen dosyadır.
#####

7- - ".git" klasörünü silersek ne olur?

Git ile yaptığımız tüm geçmiş bilgisini ve tüm ayarları kaybederiz. Projemizin git deposu ortadan kalkar.