1-) Git Nedir?
	
-Dağıtık versiyon kontrol sistemidir.

2-) "git pull" ile "git fetch" komutlarının farkı nedir?

-Git fetch, uzak sunucudaki değişiklerin local bilgisayarın haberdar olmasını sağlar. Git pull ise bu değişiklikleri local bilgisayara almamızı sağlar.

3-) Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?

-Değişiklikleri commitleyip sunucuya pushlamamıştır. Ya da takım arkadaşımız pushlamış olsa bile pull işleminden önce fetch işlemini yapmamışsak yine kodları lokalimize alamayız.

4-) "HEAD" kelimesi neyi temsil etmektedir?

-Mevcut branch'teki en son commit'i temsil etmektedir.

5-) "Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?
Üzerinde değişiklik yapılan dosyaların Git’e gönderilmeden önce tutulduğu alandır.

6-) "Untracked file" ne demektir?

-Takip edilmeyen dosya anlamına gelmektedir. Yeni oluşturulan dosyalar bu kapsamdadır. Git tarafından takip edilmeyen bu dosyalar git add komutu ile staging area'ya alınmazsa yapılan değişiklikler git tarafından takip edilmez.

7-) ".git" klasörünü silersek ne olur?

-Git ile ilgili çalıştığımız tüm bilgiler kaybolacaktır. git init komutu kullanılarak git'in yeniden initiliaze edilmesi gerekecektir.

8-) Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?

- ReadMe.md dosyasının olduğu bir template belirleyip bunu git init --template komutu ile çalıştırmalıyız.

9-) Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?

-Branch, ana akışın yanında yan yollar sağlamaktadır. Yani projeyi paralel hale getirerek birçok kişinin conflict durumu ile karşılaşmadan çalışmasına imkan sağlamaktadır.

10-) Sıfırdan bir "branch" nasıl oluşturabiliriz?

-Git branch branchname komutu ile oluşturulur.

11-) Var olan bir "branch"e nasıl geçebiliriz?

-git checkout branch name komutu ile geçebiliriz.




