1.Soru: Git Nedir ?

Cevap: Git,yazılım geliştirme projelerini izlemek,yönetmek ve sürüm kontrolünü sağlamak için kullanılan bir versiyon kontrol sistemidir. Diğer bir deyişle dağıtık bir versiyon kontrol sistemidir. Linus Torvalds tarafından Linux çekirdeği geliştirme sürecinde kullanılmak üzere 2005 yılında geliştirilmiştir.Şu anda dünya genelinde projeler ve geliştirmeler için çoğunlukla kullanılmaktadır.Açık kaynaklı bir yazılımdır ve GitHub,GitLab,Bitbucket gibi bir çok platformda kullanılmaktadır aynı zamanda herhangi bir işletim sistemi üzerinde de kullanılabilir.
---------------------------------------------------------------------------------------
2.Soru: "git pull" ile "git fetch" komutlarının farkı nedir?

Cevap: Git fetch komutu uzak sunucudaki değişiklikleri alır ancak sizin localinize entegre etmez, fetch sizi sadece değişiklikler hakkında bilgilendirir.
Git pull ise uzak sunucudaki değişiklikleri alıp localinize entegrede eder.
---------------------------------------------------------------------------------------
3.Soru: Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?

Cevap: -Takım arkadaşımız commitlemiş ancak pushlamayı atlamış ise,
       -Takım arkadaşımız ile kodlarımız arasında bir conflict var ise,
       -Takım arkadaşımızın değişiklik yaptığı branchte değilsek yani doğru branchte değilsek,
       -Localimiz uzak sunucudaki yeni değişiklikler hakkında bilgi sahibi değilse git fetch yapmadıysak,
       -İnternet bağlantımızda bir sıkıntı var ise internet bağlantısını kontrol etmediysek.
       Bu durumlarda git pull ile yeni geliştirmeleri localimize alamayız.
---------------------------------------------------------------------------------------
4.Soru: "git fetch origin" komutundaki "origin" neye karşılık gelmektedir?

Cevap: "origin" kelimesi, git deposundaki varsayılan olarak adlandırılan uzak depoyu temsil eder.
       Bu isimlendirme, genellikle git deposunu oluştururken eklediğiniz uzak depo referansına atıfta bulunur.
      Yani origin, genellikle birinci uzak depoyu temsil eder ve projenin asıl kopyasının bulunduğu yerdir.
---------------------------------------------------------------------------------------
5.Soru: "HEAD" kelimesi neyi temsil etmektedir?

Cevap:"Head" kelimesi, bir Git deposundaki mevcut çalışma durumunu ifade eden bir referansı temsil eder. 
       HEAD, şu an üzerinde çalıştığınız şube (branch) veya bir commit'in doğrudan referansını gösterebilir.
       Genelde sizin en son yaptığınız commit işlemini işaret ederken,
       Bazı durumlarda bağlı olduğunuz branchi de işaret edebilir.
---------------------------------------------------------------------------------------
6.Soru: "Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?

Cevap: "Staging Area" veya "Index", Git'in çalışma prensiplerinden birini temsil eden bir bölgedir.
       Bu bölge, dosyaların değişikliklerini hazırlamak ve bir sonraki commit'e eklenecek olan dosyaları belirlemek için kullanılır.

       Yaptığımız değişiklikler bizim localimizde bulunsa bile staging areaya aktarmadığımız sürece git tarafından trac edilmiyor yani izlenmiyordur.
       Gitin değişiklikleri izleyip kontrol edebilmesi için yaptığımız değişiklikleri kaydetmemiz gerekir bu da staging area ara bölgesine aktardığımızda olur.

       (git add .) = (git add --all) = (git add -a) Directory de yer alan tüm içerikleri staging areaya alır.
  
      Bu bölge şu görevleri yerine getirir;

      Değişiklikleri Seçme ve Hazırlama:
      
      Yaptığınız değişiklikleri belirli dosyalar üzerinden seçip, "Staging Area"ye ekleyebilirsiniz. 
      Bu, değişiklikleri commit etmek üzere hazırlamanızı sağlar.

     Commit İçin Dosyaları Belirleme:

     Bir sonraki commit'in hangi dosyaları içereceğini belirlemek için "Staging Area" kullanılır. 
     Yani, "Staging Area"de bulunan dosyalar, bir sonraki commit'te yer alacaktır.

    Parça Parça Commit İmkanı:

     "Staging Area" sayesinde, farklı değişiklikleri ayrı ayrı commit etme esnekliğine sahip olabilirsiniz.
     Yani, bir dosyanın bir kısmını hazırlayabilir ve sadece o kısmını commit edebilirsiniz.
-----------------------------------------------------------------------------------------------