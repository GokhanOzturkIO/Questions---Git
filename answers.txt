✔Git Nedir?
 -Git, dağıtık bir versiyon kontrol sistemi (VSC) olarak kullanılan açık kaynaklı bir yazılımdır.
 -Git, geliştiricilere bir projenin dosyalarının kodunun sürümlerini takip etmeye, değişiklikleri taki etmeye ve farklı geliştiriciler arasında işbirliği yapmamızda yardımcı olur.
 -Git sayesinde projemizde geçmişte yapılan değişiklikleri geri dönme, hataları düzeltme ve proje geçmişi görme(kim tarafından,ne zaman,ne yapıldığını) imkanı sağlar.

✔ "git pull" ile "git fetch" komutlarının farkı nedir?
  -"git fetch" komuutu değişikliklerden haberder olmamızı sağlar değişikliklerin ne olduğunu gösterir ama lokal branchine almaz. 
  -"git pull" ise uzak sunucudaki ilgili branchte ne varsa lokaline alır.

✔Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?
   - kodlarını pushlamamış olabilir.
   - git fetch yapmamış olabilir.

✔"git fetch origin" komutundaki "origin" neye karşılık gelmektedir?
   Uzak sunucu 

✔"HEAD" kelimesi neyi temsil etmektedir?
   -Bağlı olduğumuz branchtaki en son yapılmış olan commit'i temsil etmektedir.

✔ "Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?
   -Bir sonraki commit'e eklemek istediğiniz değişiklikleri geçici olarak depoladığımız yer.

✔"Untracked file" ne demektir?
   -İzlenmeyen dosya, commit'e eklenmemiş ve takip edilmeyen dosya diyebiliriz.

✔".git" klasörünü silersek ne olur?
   Git'in tüm versiyon kontrol bilgileri, uzak bağlantı bilgileri , branch ve commit bilgilerimiz kaybolur. Yeniden git'i initialize etmemiz gerekecek.

✔ Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?
   Klasörün içerisine Readme.md dosyası oluşturup git init --template=klasör yolu dedim .gitin içerisine oluştu. 

✔ Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?
   -Projelerimizi yönetmek için kullanılan bir komuttur.
   -Projenizdeki dallları görmeniz ve yeni bir dal oluşturmanızı sağlar.
    Bize ne sağlar?
   -Branchler bizlere farklı özellikler geliştirirken ve hataları düzeltirken işimizi organize etmemize yardımcı olur.
   -Projede fazla kişi olduğunda her biri kendinde branchinde çalışır böylece çakışma(conflict) olasılığı azalır. 
