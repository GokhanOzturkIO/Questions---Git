1.Git Nedir?
-> Git, yazılım geliştirme projelerinde kullanılan dağıtılmış bir versiyon kontrol sistemidir. Değişiklikleri izler, farklı versiyonlar arasında geçiş yapmayı sağlar ve ekip üyelerinin işbirliğini kolaylaştırır. 
Hızlı, güvenilir ve esnek yapısıyla popülerdir.
<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
2.git pull" ile "git fetch" komutlarının farkı nedir?
git fetch yalnızca uzak depodaki güncellemeleri getirir ve yerel kopyayı etkilemezken, git pull hem güncellemeleri alır hem de yerel kopyayı günceller.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
3.git fetch origin" komutundaki "origin" neye karşılık gelmektedir?
-> Ana proje dosyasındaki son güncellemeri almak için kullanılan komuttur.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
4."HEAD" kelimesi neyi temsil etmektedir?
-> Git içinde hangi konumda olduğumuzu gösterir.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
5."Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?
-> Staging area, Git'in çalışma ağacınızdaki (working tree) değişiklikleri takip etmesine ve yönetmesine yardımcı olan bir ara bellek gibidir.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
6."Untracked file" ne demektir?
-> Git'de takip edilemeyen dosyalara denir.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
7. .git klasörünü silersek ne olur
-> 1.Geri döndürülemez bir işlemdir.
   2.Projenizin versiyon geçmişini, değişiklik takibini ve uzak depo bağlantısını kaybolur. 		
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
8. Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?
-> git init komutundan sonra otamatık olarak oluşur yada belirli sablonlar kullanarak isteğimiz dosyaların otamatik olarak eklenmesini isteyebiliriz.
       ## Kod Örneği.
	mkdir -p ~/.git-templates/initial
	cp README.md ~/.git-templates/initial/
	git init example

<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
9. Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?
-> Projemizi dallara ayırmamızı sağlar.Proje içinde birçok kişinin kendi caseni geliştirmesine olanak sağlar.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
10. Sıfırdan bir "branch" nasıl oluşturabiliriz?
-> git branch ynemreuslu komutu ile yeni bir branch oluşturmuş olduk.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
11. Var olan bir "branch"e nasıl geçebiliriz?
-> git checkout ynemreuslu komutu ile branche geçeriz.
-> git checkout -b ynemreuslu komutu ile hem yeni branch acariz ve o branche geçeriz.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
12. "git clone" komutunu kullanırken belirli bir spesifik branch'i sadece çekmek istiyorsak nasıl yapabiliriz?
-> git clone --single-branch ynemreuslu https://github.com/GokhanOzturkIO/Questions-Git komutuyla, "Questions" deposundaki "ynemreuslu" adlı branch'i klonlamış olduk.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
13."Merge conflict" ne demektir?
-> "Merge conflict", Git'te iki farklı kaynaktan (genellikle farklı branch'lerden veya commit'lerden) gelen değişikliklerin otomatik olarak birleştirilememesi durumudur. Bu durumda, 
kullanıcı tarafından manuel olarak çözülmesi gereken bir durumdur.
<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->





			