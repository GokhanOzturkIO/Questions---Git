1. Git yazılım geliştirme sureclerinde kullanılan versiyon kontrol aracıdır. Projede farklı bilgisayarlardan birden fazla kisinin calısmasına ve proje uzerınde yapılan degısıklıklerının es zamanlı kaydedilmesine olanak tanır.
2. Git pull remote repositorydeki degısıklıklerı alır ve local repository ile merge eder. Bu overwrite merge conflict e yol acabilir. Git fetch ise sadece degisiklikleri alır ve local repositoryde degisiklik yapmaz. Bu sayede değişiklikleri gözden geçirmek için zaman verir.
3. Henüz remote repository ye pushlanmamıs olabilir veya fetch etmek ıcın gerekli izinlere sahip degilizdir. İnternet baglantısıyla ilgili veya remote repository adres ismiyle ilgili bir sıkıntı olmus olabılır.
4. Remote repository url i için kullanılan standart default bir kısaltmadır. İsmi isteğe bağlı değiştirilebilir.
5. Kullanıcının mevcut branchte hangi commit üzerinde çalıştığını gösterir. Bu dizindeki dosyaların hangi sürümde olduğunu belirler. Yeni commit oluşturulduğunda HEAD otomatik olarak bu konumu işaret eder.
6. Staging area commit edilmeye hazır olan değişiklikleri içinde barındıran ara bi alandır. Working directorydeki değişiklikler staging area ya eklenerek sonraki commit e dahil edilebilir. Commit etmeden önce genel bir kontrol için kullanılabilir.
7. Git tarafından kontrol edilemeyen dosyalardır. Takip edilmesi için git add ile staging areaya eklenip daha sonra git commit komutunu kullanmak gerekir.
8. Git ile ilgili kaydedilmiş tüm bilgiler silinir.