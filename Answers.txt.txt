- Git Nedir?
CEVAP:Yazılım geliştirme süreçlerinde kullanılan bir araçtır depolamak için de kullanılır yaptığımız her bir değişikliği adım adım takip eder ve kaydeder takım halinde bir proje geliştiriliyorsa buna kolaylık sağlar.

- "git pull" ile "git fetch" komutlarının farkı nedir?

CEVAP:git fetch uzak sunucudaki gönderilen değişiklerden lokaldaki bilgisayarımızın haberdar olmasını sağlar fakat çalıştırmaz ve birleştirmez git pull ise ana dosyadaki yapılan değişiklikleri bilgisayarımızdaki sunucuya çekmeyi sağlar 


- Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?

CEVAP:
1-değişiklikleri push etmemiş olabilir
2-branchler farklı olabilir
3-git fench komutu ile depoyu güncellememiş olabilir

- "git fetch origin" komutundaki "origin" neye karşılık gelmektedir?

CEVAP:bir projeyi klonladığımızda klonladığımız projeyi ana sunucusundaki projeyi yani projenin orijinal kaynağını ifade eder

- "HEAD" kelimesi neyi temsil etmektedir?

CEVAP:Atılan son commiti ve ya bağlı oldğumuz başka işlemler içinde o anki açıkta olan branchi işaret eder.Yani bir commit üzerinde çalışıyorsak head direkt o commiti gösterir

- "Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?

CEVAP:Git'te bir dosya değiştirdiğimizde bu değişiklikleri Staging Area'ya eklememiz gerekir.Bu değişiklikleri git add komutu ile ekleriz  farklı değişikliklerin birleşip commit edilmesini de sağlar.

- "Untracked file" ne demektir?

CEVAP:Sıfırdan bir dosya oluşturduğumuzda untracked files olarak işaretler yani BUNU GİT ÖNCE GİT'İN SİSTEMİNE TANIT DEMEKTİR


- ".git" klasörünü silersek ne olur?

CEVAP:tüm dosyaları bağımsız olarak bırakır ve dosyaların git ile hiçbir bağlantısı kalmaz yönetilemez açılan branchler yazılan kodlar kısaca tüm commitler ve her şey kaybolur


- Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?

CEVAP:Bilmediğim için chatgptye sordum 
kısaca bir .git dosyasının içinde -templates klasörü oluşturup oluşturduğumuz bu klasöre README.md dosyasını kopyalamalıyız.


- Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?

CEVAP:Harici çalışabileceğimiz yan yollar sunar ayrı ayrı çalışmamızı sağlar birbirinden bağımsız aynı projede çalışmayı sağlar bunun yararı sürekli conflict olmamak içindir ÖRNEĞİN İKİ KİŞİYE BİRER KOPYA VERİR EN SONRA BİRLEŞTİRİRKEN CONFLİCT OLURSA O ZAMAN KARŞILAŞTIRIR.


- Sıfırdan bir "branch" nasıl oluşturabiliriz?
CEVAP:2 yolu vardır 
1-git branch feature/isim
2-git checkout -b feature/isim

- Var olan bir "branch"e nasıl geçebiliriz?

CEVAP: git checkout feature/geçmek istediğimiz branchin ismi


- "git clone" komutunu kullanırken belirli bir spesifik branch'i sadece çekmek istiyorsak nasıl yapabiliriz?

CEVAP:özel bir branch dowland etmek istersek branch name kullanarak indirebiliriz 

örneğin: git clone --branch adı (branch adresi)


- "Merge conflict" ne demektir?

CEVAP: birleşme çakışması denir. farklı branchlerden gelen değişiklikleri birleştirmeye çalışırken karşılaşılan duruma denir 
ÖRNEĞİN:biri bir satırdan kod sildiyse ama diğeri o satıra kod eklediyse git buna karar veremez ve branchleri birleştirirken sorar hanginisi kabul edeyim ya da ikisinide mi kabul edeyim bize bırakır


- "git log" komutu ile hangi bilgileri görebiliriz?
- "git diff" ile kaç farklı iki durumun arasındaki değişiklikleri görebiliriz?
- Git reset ile neyi geri alıyoruz?
- "git commit" ile "git push" arasındaki fark nedir?
- Atomic commit ne demektir?
- Repository ne demektir?
- "git tag" nedir? "git branch"’ten farkı nedir?
- Git'i görsel olarak kullanabilmek için hangi üçüncü taraf araçları ve uygulamaları kullanabiliriz?
- "GitHub" ile "git" arasındaki fark nedir? GitHub benzeri diğer siteler nelerdir? GitHub veya diğer sitelerdeki kullanıcı adlarını yazar mısınız?
- main ya da master branch'inin diğer branchlerden farkı nedir?
- ".gitignore" dosyası nedir ve ne amaçla kullanılır?