
/*
*
* Answers format in this file is structured to provide both my response
* and the correct answer for each question in a clear and organized manner.
* 
* ## symbol represents my answers
* >> symbol represents the correct answer
* 
* Hopefully with the application of atomic commit message format. 
*
* Note: Correct answers are from ChatGPT 3.5 with this prompt:
*
* "Can you explain '<Question here>' as a mid or senior developer with a sentence or two?"
*
*/

*******************************************************

Q1 - What is Git? 

## Git is a Version Control System that helps developers to collaborate with other people and work with an ease of knowing that they can undo or revert things.

>> Git is a distributed version control system that empowers developers to track changes, collaborate seamlessly, and manage code effectively, serving as a cornerstone of modern software development workflows.

*******************************************************

Q2 - What is the difference between the 'git pull' and 'git fetch' commands?

## The difference lies in merging the changes into the current branch. Git fetch only retrieves the changes, while git pull also performs the merge. 

>> git pull updates your local branch with changes from the remote repository and automatically merges them, while git fetch retrieves the changes from the remote but leaves them in your local repository for you to merge or review manually.

*******************************************************

Q3 - If our teammate says, 'I've pushed my code, continue with my development,' and we can't fetch their code using 'git pull,' where might we have gone wrong?

## I would verify whether my teammate had pushed the code by reviewing the git log.

>> If our teammate claims they've pushed their code but we can't fetch it with 'git pull,' it suggests a potential oversight on their part, such as forgetting to push to the correct branch or failing to synchronize their local changes with the remote repository before pushing.

*******************************************************

Q4 - What does the word "HEAD" represents?

## Checked-out branch's latest commit.

>> In Git, 'HEAD' is a reference to the current commit in the repository, serving as a pointer to the tip of the currently checked out branch or the specific commit being worked on.

*******************************************************

Q5 - What does the region called 'Staging Area' or 'Index' exactly mean?

## It's the area where you decide which changes from your local files will be pushed to the server.

>> The 'Staging Area' or 'Index' in Git refers to a transitional area where changes are prepared before committing to the repository, allowing developers to selectively stage modifications for inclusion in the next commit.

*******************************************************

Q6 - What does 'Untracked file' mean?

## The files which we did not add to git.

>> "Untracked file" refers to a file in a Git repository that is not currently being tracked by Git. This means that Git is unaware of any changes made to the file, and it will not be included in commits or pushed to the remote repository unless explicitly added to the staging area using the "git add" command.

*******************************************************

Q7 - What happens if we delete the ".git" folder?

## That means we lose the files which tracked by git.

>> If we delete the ".git" folder in a Git repository, we effectively remove all version control information and history associated with that repository, rendering it no longer recognized as a Git repository.

*******************************************************

