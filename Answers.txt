1.Git Nedir? Sorusunun Cevabı:

-- Yazılım geliştirme projelerinde kullanılan, dosyaların ve projenin tüm geçmişinin kaydedilmesini ve yönetilmesini sağlayan bir araçtır. Projedeki her değişiklik bir "commit" olarak adlandırılır ve her kullanıcı kendi kopyası üzerinde bağımsız olarak çalışabilir. Git, projenin farklı sürümlerini karşılaştırma, birleştirme ve geri alma gibi işlemleri kolaylaştırır, böylece ekip üyeleri daha verimli bir şekilde işbirliği yapabilir.
-------------------------------------------------------------------------------------------------------------------------------------

2."Git Pull" ile "Git Fetch" komutlarının farkı nedir? sorusunun cevabı:

--git fetch: Uzak depodan güncellemeleri alır, ancak yerel çalışma alanınızı değiştirmez. Yani, uzak depodaki değişiklikler yereldeki dosyalara yansıtılmaz. Bu komut, sadece uzak depodaki güncellemeleri indirir ve onları yerelde kontrol etmenizi sağlar.
--git pull: Uzak depodan güncellemeleri alır ve bunları yerel çalışma alanınıza uygular. Bu komut, aslında git fetch ve git merge komutlarını birleştirir. Yani, uzak depodaki değişiklikleri alır ve mevcut çalışma dalınıza (branch) birleştirir.
--Bu nedenle, genellikle güncellemeleri almak için git fetch kullanmanız ve ardından gerektiğinde yerel çalışma alanınızı güncellemek için git merge veya git rebase kullanmanız önerilir. git pull kullanmak, sadece basit güncellemeler alırken ve hızlı bir şekilde çalışırken tercih edilebilir.

-------------------------------------------------------------------------------------------------------------------------------------

3.Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir? Sorusunun Cevabı:

--Takım arkadaşınızın kodlarını gönderdiği branch ile sizin lokalde olduğunuz branch farklı olabilir.
--İnternet bağlantınızda bir sorun olabilir.
--Uzak depoya erişim yetkiniz olmayabilir.
--Takım arkadaşınızın kodlarını gönderdiği commitler sizin lokaldeki commitlerle çakışıyor(conflict) olabilir.

-------------------------------------------------------------------------------------------------------------------------------------

4.git fetch origin" komutundaki "origin" neye karşılık gelmektedir? Sorusunun Cevabı:

--origin, genellikle bir Git depoya verilen isimdir ve uzak depoyu temsil eder. Bir depoyu klonladığınızda, Git otomatik olarak bu depoya origin adını verir. 
--Bu şekilde, uzak depoyu ifade etmek için origin adını kullanabilir ve git fetch origin gibi komutlarla bu uzak depodan güncellemeleri alabilirsiniz.

-------------------------------------------------------------------------------------------------------------------------------------

5.HEAD" kelimesi neyi temsil etmektedir? Sorusunun Cevabı:

--"HEAD", Git deposundaki şu anki çalışma konumunu (branch'i) gösteren bir referanstır. HEAD, genellikle çalışma alanınızdaki son commit'i (en son yapılan değişiklik) gösterir.
--HEAD'in işaret ettiği yer, çalışma alanınızda bulunan branch'in son commit'idir. Eğer doğrudan bir commit'in ID'sini vermek isterseniz, bu commit üzerinde HEAD'i taşıyabilirsiniz. Bu durumda, çalışma alanınızı bu commit'in durumuna götürmüş olursunuz.
--Özetle, HEAD, şu anki branch'in son commit'ini temsil eder ve çalışma alanınızda nerede olduğunuzu belirler.

-------------------------------------------------------------------------------------------------------------------------------------

6."Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir? Sorusunun Cevabı:


--"Staging Area" veya "Index", Git'in çalışma prensibinde önemli bir role sahip olan bir bölgedir. Bu bölge, değişiklikleri commit etmeden önce hazırlayabileceğiniz bir alandır. Yani, değişiklik yapmak istediğiniz dosyaları buraya ekleyerek (staging), bu dosyaları bir sonraki commit işleminizde dahil etmeyi seçebilirsiniz.

-------------------------------------------------------------------------------------------------------------------------------------

7."Untracked file" ne demektir? Sorusunun Cevabı:

--"Untracked file" (izlenmeyen dosya), Git'in takip etmediği ve değişikliklerini izlemediği dosyalardır. Genellikle proje klasörünüzde bulunan ve Git'in göz ardı ettiği yeni dosyalar olarak düşünebilirsiniz.
--Bir dosya, projenize eklediğinizde (örneğin, git add komutunu kullanarak), Git bu dosyayı izlemeye başlar ve değişikliklerini takip eder. Ancak, henüz eklenmemiş ve Git tarafından izlenmeyen dosyalar untracked file olarak kabul edilir.

-------------------------------------------------------------------------------------------------------------------------------------

8.






















