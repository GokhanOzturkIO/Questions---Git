Q1)Git Nedir

Git,dağıtık version kontrol sistemi ve kaynak kod yönetim aracıdır.Bizim yazılım geliştirme sürecimizde,projelerimizi izlemek,değişikliklikleri yönetmek,işbirliği yapmak ve geçmiş versiyonlara geri dönmek için kullanılır.En basit tanımıyla bir versiyon kontrol sistemi olarak düşünebiliriz.Versiyonlarına ayırmak istediğimiz herhangi birşey var ise git kullanımını rahatça yapabiliriz.Metinleri,görselleri,belgeleri etkili bir şekilde git ile yönetebiliriz.
=================================================================================================================================================================

Q2)"git pull" ile "git fetch" komutlarının farkı nedir?

Öncelikle tanımlayalım,bu iki komut da remote repodaki değişiklikleri almak için kullanılan iki farklı git komutudur.Bu kodların ikisi de uzak repodaki güncellemeleri indirmemize olanak verir fakat aralarında önemli farklar vardır.

Git Fetch komutu uzak repodaki değişiklikleri indirir ve localda güncel bir kopyasını oluşturur fakat bu,local çalışma dizinimizi değiştirmez,mevcut çalışmamızı etkilemez.Bizim local kopyamız'ı güncellemez,sadece "bak remote repoda değişiklikler oldu haberin olsun" şeklinde çalışır.

Git Pull ise aslında git fetch + git merge gibi düşünebiliriz.Git pull remote repodaki değişiklikleri indirir,ve bu değişiklikleri local branchimiz ile birleştirir.Bu aynı zamanda local repomuzu da günceller.Yani, temel fark, git fetch ile sadece uzak depodaki güncellemelerin alınması ve yereldeki dosyaların güncellenmemesi, git pull ile ise uzak depodaki güncellemelerin alınması ve yerel dosyaların otomatik olarak güncellenmesidir.

=================================================================================================================================================================

Q3)Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?

Öncelikle takım arkadaşımız kodu commitlemiş fakat remote repoya push etmemiş olabilir.
Remote repoda herhangi bir bağlantı problemi olmuş olabilir.
Bizim remote repoya erişim iznimiz olmayabilir.

=================================================================================================================================================================

Q4)"HEAD" kelimesi neyi temsil etmektedir?

HEAD genel olarak çalıştığımız branch üzerinde atılan en son commiti işaret eder.Bu nedenle HEAD, kullanıcının çalışma dizininideki en son değişiklikleri temsil eder.Git komutlarını kullanırken HEAD,genellikle mevcut konumumuzu ifade etmek için kullanılır.

=================================================================================================================================================================

Q5)"Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?

Bu bölge aslında bizim yaptığımız değişikliklerin commitlenmeden önceki bulunduğu ara bir alandır.Bu,kullanıcının commit yapmadan önce değişiklikleri görmesine ve istenmeyen değişikliklerin yanlışıkla dahil edilmesini önlemesine olanak tanır.git add komutu ile dosyaları staging area'ya ekleyebiliriz.

=================================================================================================================================================================

Q6)"Untracked file" ne demektir?

Untracked file,git repomuzda izlenmeyen dosyaları ifade eder.Yani kısa tabirle biz git status yazdığımızda Untracked file yazısı görüyorsak o dosyayı git takip etmiyordur.Yeni oluşturulan dosyalar genellikle izlenmeye başlanmazlar.Bu dosyaları biz git add komutu ile staging area'ya ekleyerek tracked edilmesini sağlarız.Ayrıca projenin gereksinimine bağlı olarak da,belirli dosyaların izlenmesini veya izlenmemesini sağlamak isteyebiliriz.
	






