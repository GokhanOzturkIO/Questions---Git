1. Git Nedir?

Git, yazılım geliştirme projeleri için popüler bir dağıtılmış versiyon kontrol sistemi (VCS) ve kaynak kod yönetim aracıdır. Yazılım geliştirme sürecinde, farklı geliştiricilerin eşzamanlı olarak aynı projede çalışmasını ve projenin farklı versiyonlarının takibini kolaylaştırır.

Git'in temel özellikleri şunlardır:

Dağıtılmış Versiyon Kontrol Sistemi: Git, her geliştiricinin kendi kopyasını alabileceği ve değişikliklerini bağımsız olarak gerçekleştirebileceği dağıtılmış bir yapıya sahiptir. Bu, internet bağlantısı olmadan da çalışabilmenizi sağlar.

Hızlı ve Verimli: Git, hızlı ve verimli çalışma prensipleriyle tasarlanmıştır. Büyük projelerde bile performansını korur.

Gelişmiş Dal ve Birleştirme (Branching and Merging): Git, farklı geliştirme dallarında (branch) çalışmayı ve bu dalları birleştirmeyi kolaylaştırır. Bu, eşzamanlı olarak farklı özellikler üzerinde çalışmayı ve karmaşık projeleri yönetmeyi sağlar.

Hafif Etiketleme (Lightweight Tagging): Projeye anlamlı noktaları etiketleyerek (tag) belirlemek için hafif ve kolay bir etiketleme sistemine sahiptir. Bu, belirli sürümleri veya önemli dönüm noktalarını işaretlemek için kullanılır.

Yerel Depo (Local Repository) ve Uzak Depo (Remote Repository) Desteği: Git, hem yerel bilgisayarınızda (local repository) hem de uzak sunucularda (remote repository) proje depolarını yönetmenizi sağlar. Böylece, işbirliği yapabilir ve projenin farklı sürümlerini paylaşabilirsiniz.

Git, açık kaynaklı bir yazılımdır ve birçok platformda (Windows, macOS, Linux) kullanılabilir. Geliştiriciler arasında yaygın olarak kabul gören ve kullanılan bir versiyon kontrol sistemi olmasıyla bilinir.

===========================================================

2. "git pull" ile "git fetch" komutlarının farkı nedir?

git pull ve git fetch komutları, uzak bir Git deposundan değişiklikleri yerel depoya getirmek için kullanılır, ancak farklı şekillerde çalışırlar.

git fetch:

git fetch, uzak bir depodaki tüm değişiklikleri yerel depoya getirir, ancak bu değişiklikleri yerel çalışma kopyasına birleştirmez.
Fetch komutu, yereldeki referansları (branch'leri, tag'leri vb.) uzak depodaki ile eşleştirir, böylece yerelde hangi değişikliklerin olduğunu görebilirsiniz.
Yereldeki çalışma kopyanızda (origin/master gibi) uzak depodaki son değişiklikleri görebilirsiniz, ancak bu değişiklikleri birleştirmek için ayrıca bir git merge veya git rebase komutu kullanmanız gerekir.
git pull:

git pull, aslında iki adımlı bir işlemi tek bir adımda gerçekleştirir. İlk olarak, git fetch komutunu çağırır ve uzak depodaki değişiklikleri yerel depoya getirir. Ardından, otomatik olarak bu değişiklikleri yerel çalışma kopyasına birleştirir (merge işlemi gerçekleştirir).
Yani, git pull, git fetch ve birleştirme işlemini (git merge veya git rebase) tek bir komutla gerçekleştirir.
Genel olarak, git fetch komutu uzak değişiklikleri alır ve onları yerel depoya getirirken, git pull komutu uzak değişiklikleri alır, yerel depoya getirir ve otomatik olarak birleştirir. Hangisini kullanmanız gerektiği, alışkanlıklarınıza, projenizin gereksinimlerine ve iş akışınıza bağlı olabilir. Bazı geliştiriciler git fetch ve daha sonra birleştirme işlemi yapmayı tercih ederken, diğerleri git pull komutunu kullanarak işlemi tek bir adımda gerçekleştirir.

===========================================================

