Git Nedir?

Git, dağıtık bir sürüm kontrol sistemidir (distributed version control system). Yazılım geliştirme süreçlerinde kullanılan bir araçtır. Bir projenin tüm tarihçesini ve değişikliklerini takip etmek, farklı geliştiriciler arasında işbirliği yapmak ve kod tabanındaki değişiklikleri yönetmek için kullanılır.

Git'in en popüler kullanım alanlarından biri, yazılım geliştirme süreçlerinde kaynak kodu yönetmektir. Ancak, belge yönetimi, veri analizi projeleri ve hatta yazarlar arasında metin belgeleri üzerinde işbirliği yapmak gibi birçok farklı alan için de kullanılabilir.

===========================================================================================================================================

"git pull" ile "git fetch" komutlarının farkı nedir?

git fetch lokal ile remote arasındaki farkların tespit edilmesini sağlar. Remotedaki değişiklikleri lokal repoya indirir fakat lokaldeki dosya yapısını değiştirmez. 

git pull uzak depodaki değişiklikleri yerel depoya indirir ve ardından yerel çalışma kopyasını günceller. Yani, "git fetch" ile aynı işlemi yapar, ancak ardından otomatik olarak yerel çalışma kopyasını da günceller.

===========================================================================================================================================

Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?

Takım arkadaşımız commitlemiş ama pushlamamış olabilir. 

Yeni bir dosya eklediyse untrack dosyayı staging area’ya addlememiş ve böyle pushlamış olabilir.

Yanlış repoyu pullamaya çalışıyor olabiliriz.

Bulunduğum klasör .gitin olduğu klasöy olmayabilir.

Farklı bracnlerde çalışıyor olunabilir.

===========================================================================================================================================

"git fetch origin" komutundaki "origin" neye karşılık gelmektedir?

"origin" projenin remote bir kanalda (Github, GitLab, BitBucket vb.) bulunan repo adresini temsil eder. "origin", çoğu durumda, projenin orijinal veya merkezi bir kopyasını barındıran uzak bir repoyu belirtmek için kullanılan bir kısaltmadır.

===========================================================================================================================================

"HEAD" kelimesi neyi temsil eder?

Git sisteminde "HEAD", genellikle çalışılan branch'in en son commit'ini işaret eden bir referanstır. "HEAD", mevcut konumunuzu işaret eder ve genellikle en son yaptığınız değişikliklerin bulunduğu noktayı gösterir.

===========================================================================================================================================

"Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?

"Staging Area" Git'in güçlü ve esnek bir özelliğidir. Değişiklikleri kontrollü bir şekilde commit etmek ve commit öncesi inceleme yapmak için kullanılır.  Git'in çalışma alanı ile commit arasında bir ara depolama bölgesidir. Bu bölge, yapmak istediğiniz değişiklikleri seçici bir şekilde eklemek ve bir sonraki commit'e hazırlamak için kullanılır.

===========================================================================================================================================

"Untracked file" ne demektir?

 Git deposuna henüz eklenmemiş veya izlenmemiş olan bir dosyayı ifade eder. Yeni bir dosya oluşturduğunuzda veya mevcut bir dosyayı değiştirdiğinizde, Git bu dosyayı otomatik olarak izlemez. Bu durumda, dosya "untracked" olarak kabul edilir.

===========================================================================================================================================

".git" klasörünü silersek ne olur?

".git", bir Git deposunun temel yapı taşıdır ve depoya ait tüm versiyon kontrolü bilgilerini içeren bir dizindir. Bu dizin, Git'in deposu yönetmek için kullandığı dosya ve klasörleri içerir. ".git" dizini, bir projenin tüm geçmişini, dallarını, commit'lerini, değişikliklerini ve diğer versiyon kontrolü bilgilerini barındırır.

".git" klasörünü silmek, Git deposunun tamamını kaybetmenize neden olur. Bu klasör, Git'in depo yönetimi ve versiyon kontrolü işlemleri için gereken tüm verileri içerir. ".git" klasörü olmadan, Git deposu tamamen etkisiz hale gelir ve tüm geçmiş, dallar, commit'ler, değişiklikler ve diğer versiyon kontrolü bilgileri kaybolur.

===========================================================================================================================================

Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?

git init –template [klasör adresi] ile daha önceden hazırlanmış bir klasörün içerisine ReadMe.md dosyasını oluşturur ve bundan sonra oluşturulacak olan git repolarında git init –template [klasör adresi] ile oluşturarak bunu sağlamış oluruz. 

===========================================================================================================================================

Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?

Branchin türkçedeki anlamı dal demektir. Projeminizin dallanamasını sağlayan bir yapıdır. Birden çok developerın aynı projede paralel olarak çalışmasına olanak sağlar. Projenin farklı geliştirme hatlarını veya çalışma dallarını temsil eden bir yapıdır. Her bir branch, projenin farklı bir versiyonunu veya farklı bir özellik geliştirme çalışmasını içerebilir.

===========================================================================================================================================

Sıfırdan bir "branch" nasıl oluşturabiliriz?

git branch <yeni-branch-adı>
git checkout -b <yeni-branch-adı> iki farklı yoldan yeni bir branch oluşturulabilir.

===========================================================================================================================================

Var olan bir "branch"e nasıl geçebiliriz?

git checkout <branch-name> ile var olan bir branche geçilebilir.

===========================================================================================================================================

"git clone" komutunu kullanırken belirli bir spesifik branch'i sadece çekmek istiyorsak nasıl yapabiliriz?

git clone --single-branch --branch <branch-adı> <repository-url> komutu ile çekebiliriz.

===========================================================================================================================================

