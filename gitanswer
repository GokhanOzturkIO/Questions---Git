Soru 1 Git Nedir ?
- Git bir versiyon kontrol sistemidir. Özellikle ekip çalışması gerektiren işlerde kullanılması önem arz etmektedir. Aynı zamanda git sayesinde geçmişe rahatlıkla erişebiliyoruz.

Soru 2 "git pull" ile "git fetch" komutlarının farkı nedir?
- Git Fetch ile değişikliklerin olduğu bilgisini alıyoruz fakat değişikliklere lokalimizde erişemiyoruz. Git pull işlemi ile lokalimizde erişebilir hâle geliyoruz.

Soru 3 Eğer takım arkadaşımız "kodlarımı gönderdim, benim geliştirmemin üzerine devam et" derse ve gönderdiği kodları "git pull" ile lokalimize alamıyorsak nerelerde hata yapılmış olabilir?
- iki türlü yanlış yapılmış olabilir. Ya arkadaşımız commitlemiş fakat pushlamamıştır ya da biz fetch yapmadan pullamaya çalışıyoruzdur.

Soru 4 "git fetch origin" komutundaki "origin" neye karşılık gelmektedir?
- Origin ifadesi uzak depoyu ifade eder ve genelde github için kullanırız.

Soru 5 "HEAD" kelimesi neyi temsil etmektedir?
- Head kelimesi işaretçi anlamına gelir. Son commit ya da branchi gösterir.

Soru 6 "Staging Area" ya da "Index" diye isimlendirilen bölge tam olarak ne demektir?
- Staging Area'ya araf olarak nitelendirebileceğimiz ara bir bölge. Lokalimiz ile uzak sunucu arasında bulunur. git add komutuyla staging area'ya alırız ve ardından commitleyip pushlayarak uzak sunucuya göndeririz.

Soru 7 "Untracked file" ne demektir?
- Untracked File takip edilmeyen dosya demektir ve gitin takip etmediğini ifade eder

Soru 8 ".git" klasörünü silersek ne olur?
- .git klasörünü silersek o dosya takip edilemez hâle gelir. .git sayesinde git takip ediyor.

Soru 9 Kendi lokalimizde her "git init" komutunu kullanıdığımızda otomatik olarak "ReadMe.md" dosyası oluşturulmasını istiyorsak ne yapmalıyız?
- Bunun için "git init --template" komutunu kullanmamız gerekiyor. 
- "git init şablonDosyası konumu" komutuyla yapabiliriz.

Soru 10 Git konusunda bahsi geçen "branch" yapısı nedir? Bize ne sağlar?
- Branch dallanma olarak nitelendirebileceğimiz bir terimdir. Bize eş zamanda başka insanlarla çalışabilmemizi ve dallandırmayla beraber olası bir hatada o branch silinebilir.

Soru 11 Sıfırdan bir "branch" nasıl oluşturabiliriz?
- sıfırdan branch oluşturmak istersek eğer git branch branchadi diyerek oluşturabiliriz.

Soru 12 Var olan bir "branch"e nasıl geçebiliriz?
- git checkout branchadi komutu ile geçebiliriz

Soru 13 "git clone" komutunu kullanırken belirli bir spesifik branch'i sadece çekmek istiyorsak nasıl yapabiliriz?
- "git clone -b branchadi" komutuyla sadece o branchi çekebiliriz.

Soru 14 "Merge conflict" ne demektir?
- Merge conflict ifadesi çakışan satırlar için kullanılır. Bir ekip arkadaşımızla proje yaptığımızı düşünelim ve ikimiz de aynı satırları farklı şekilde güncelledik. ikimiz de pushladığımız zaman conflict olur ve git bizden hangisini seçmemiz gerektiğini sorar.